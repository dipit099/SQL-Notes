

SELECT SALARY+COMMISSION_PCT
FROM EMPLOYEES
WHERE COMMISSION_PCT is NOT NULL  --or it show null entries too ..make full value NULL

SELECT ROUND(avg(SALARY), 2) 
FROM EMPLOYEES

SELECT COUNT(EMPLOYEE_ID)
FROM EMPLOYEES

SELECT  DISTINCT COMMISSION_PCT 
FROM EMPLOYEES

SELECT CASE
	WHEN SALARY<10000 THEN 'a'
	else 'b'
	END
	AS grade, COUNT(SALARY) , COUNT(COMMISSION_PCT)
	
FROM EMPLOYEES
GROUP BY
( CASE
	WHEN SALARY<10000 THEN 'a'
	else 'b'
	END
)


SELECT JOB_ID , COUNT(*)  AS NN 
FROM EMPLOYEES
WHERE SALARY>10000
GROUP BY JOB_ID
HAVING  COUNT(*)  >2
ORDER BY NN 



SELECT round(SYSDATE)
FROM dual

SELECT LAST_NAME, SALARY
FROM EMPLOYEES
WHERE HIRE_DATE BETWEEN '01-JAN-1900' AND '31-DEC-2002' ;


SELECT LPAD((FIRST_NAME || ' ' || LAST_NAME),20,'*') AS NAME
FROM EMPLOYEES


SELECT LAST_NAME, TRUNC( (TO_DATE(SYSDATE) - HIRE_DATE)/365,3 ) AS "DAYS EMPLOYED"
FROM EMPLOYEES


SELECT LAST_NAME, NVL(SALARY,0)*66+NVL(SALARY,0)*66*(NVL(COMMISSION_PCT,0)) SAL
FROM EMPLOYEES


SELECT FIRST_NAME, LAST_NAME, HIRE_DATE, ADD_MONTHS(TRUNC(HIRE_DATE, 'MONTH'),1) - HIRE_DATE AS "FIRST MONTH WORKED"
FROM EMPLOYEES

SELECT TRUNC(SYSDATE, 'MONTH')
FROM DUAL;

SELECT FIRST_NAME, LAST_NAME, TO_CHAR(HIRE_DATE,'ddth month, YYYY')
FROM EMPLOYEES;


SELECT MANAGER_ID, COUNT(*) 
FROM EMPLOYEES
GROUP BY MANAGER_ID



SELECT (CASE 
	WHEN SALARY<5000 THEN 'GROUP 1'
	WHEN (SALARY>=5000 AND SALARY <10000) THEN 'GROUP 2'
	ELSE
	'GROUP 3'
	END) AS GRADE, COUNT(*)
FROM EMPLOYEES
GROUP BY 
(
	CASE 
	WHEN SALARY<5000 THEN 'GROUP 1'
	WHEN (SALARY>=5000 AND SALARY <10000) THEN 'GROUP 2'
	ELSE
	'GROUP 3'
	END
	 
)

SELECT E.LAST_NAME, J.JOB_TITLE
FROM EMPLOYEES E JOIN JOBS J
ON E.JOB_ID=J.JOB_ID




SELECT  COUNT(*)
FROM DEPARTMENTS D JOIN LOCATIONS L 
ON (D.LOCATION_ID= L.LOCATION_ID)
JOIN COUNTRIES C
ON C.COUNTRY_ID = L.COUNTRY_ID
GROUP BY C.COUNTRY_ID

SELECT C.COUNTRY_NAME, COUNT(*)
FROM DEPARTMENTS D JOIN LOCATIONS L
ON (D.LOCATION_ID = L.LOCATION_ID)
JOIN COUNTRIES C
ON (L.COUNTRY_ID = C.COUNTRY_ID)
GROUP BY C.COUNTRY_ID, C.COUNTRY_NAME;

SELECT E.LAST_NAME, COUNT(J.JOB_ID) JOB_SWITCHES
FROM EMPLOYEES E LEFT OUTER JOIN JOB_HISTORY J 
ON (E.EMPLOYEE_ID = J.EMPLOYEE_ID)
GROUP BY E.EMPLOYEE_ID,E.LAST_NAME




SELECT E.LAST_NAME,COUNT(DISTINCT Y.EMPLOYEE_ID), COUNT(DISTINCT M.EMPLOYEE_ID)
FROM EMPLOYEES E LEFT OUTER JOIN EMPLOYEES Y 
ON E.HIRE_DATE> Y.HIRE_DATE
LEFT OUTER JOIN EMPLOYEES M 
ON E.HIRE_DATE < M.HIRE_DATE
GROUP BY E.EMPLOYEE_ID, E.LAST_NAME
HAVING E.LAST_NAME= 'King';


SELECT E.EMPLOYEE_ID, COUNT(*)
FROM EMPLOYEES E JOIN EMPLOYEES Y 
ON E.SALARY > Y.SALARY
WHERE E.EMPLOYEE_ID != Y.EMPLOYEE_ID
GROUP BY E.EMPLOYEE_ID
HAVING COUNT(*)>=3 



SELECT E1.LAST_NAME
FROM EMPLOYEES E1, EMPLOYEES E2 
WHERE E1.SALARY > E2.SALARY
GROUP BY E1.EMPLOYEE_ID, E1.LAST_NAME
HAVING COUNT(E2.EMPLOYEE_ID) >= 3;





SELECT E1.LAST_NAME, E1.SALARY, COUNT(DISTINCT E2.SALARY)+1 AS RANK 
FROM EMPLOYEES E1 LEFT OUTER JOIN EMPLOYEES E2 
ON (E1.SALARY < E2.SALARY)
GROUP BY E1.EMPLOYEE_ID, E1.LAST_NAME, E1.SALARY
HAVING COUNT(DISTINCT E2.SALARY)+1 <=3
ORDER BY RANK;




SELECT LAST_NAME
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 
(
	SELECT DEPARTMENT_ID
	FROM DEPARTMENTS
	WHERE DEPARTMENT_NAME = 'Sales'
);



SELECT D.DEPARTMENT_ID
FROM DEPARTMENTS D,EMPLOYEES E
GROUP BY D.DEPARTMENT_ID
HAVING AVG(E.SALARY)> ALL(
	SELECT MIN(SALARY)
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID))




SELECT DEPARTMENT_ID, ( SELECT DEPARTMENT_NAME FROM DEPARTMENTS D WHERE E1.DEPARTMENT_ID = D.DEPARTMENT_ID ) DEPARTMENT_NAME , ROUND(AVG(SALARY),4)
FROM EMPLOYEES E1
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) > ANY
(
	SELECT SALARY
	FROM EMPLOYEES E2 
	WHERE E2.DEPARTMENT_ID <> E1.DEPARTMENT_ID
);


SELECT E1.DEPARTMENT_ID,(SELECT DEPARTMENT_NAME
FROM DEPARTMENTS WHERE DEPARTMENT_ID=E1.DEPARTMENT_ID)  DEPARTMENT_NAME , ROUND(AVG(SALARY),4)
FROM EMPLOYEES E1
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) > ANY
(
	SELECT MIN(SALARY)
	FROM EMPLOYEES E2 
	WHERE E2.DEPARTMENT_ID <> E1.DEPARTMENT_ID
	GROUP BY E2.DEPARTMENT_ID
);





SELECT DEPARTMENT_ID,(SELECT DEPARTMENT_NAME FROM DEPARTMENTS D WHERE E1.DEPARTMENT_ID= D.DEPARTMENT_ID) DEPARTMENT_NAME
FROM EMPLOYEES E1
WHERE E1.DEPARTMENT_ID IS NOT NULL
GROUP BY E1.DEPARTMENT_ID
HAVING COUNT(*)> ALL (
	SELECT COUNT(*)
	FROM EMPLOYEES E2
	WHERE E1.DEPARTMENT_ID<>E2.DEPARTMENT_ID
	GROUP BY E2.DEPARTMENT_ID
	
)




SELECT E1.LAST_NAME,(SELECT JOB_TITLE FROM JOBS J1
WHERE J1.JOB_ID =  E1.JOB_ID) JOB_TITLE
FROM EMPLOYEES E1
WHERE E1.SALARY=(
SELECT MAX(SALARY)
FROM EMPLOYEES E2
WHERE E1.JOB_ID= E2.JOB_ID
GROUP BY E2.JOB_ID)
 



SELECT E2.LAST_NAME,COUNT(*)
FROM EMPLOYEES  E1 JOIN EMPLOYEES E2
ON E1.MANAGER_ID  = E2.EMPLOYEE_ID
GROUP BY E2.EMPLOYEE_ID,E2.LAST_NAME







SELECT employee_id, hire_date
FROM employees
MINUS
(
SELECT employee_id, hire_date
FROM employees e1
WHERE NOT EXISTS (
SELECT *
FROM employees e2
WHERE e2.department_id = e1.department_id
AND e2.hire_date > e1.hire_date
) OR NOT EXISTS (
SELECT *
FROM employees e2
WHERE e2.department_id = e1.department_id
AND e2.hire_date < e1.hire_date
)
);



SELECT FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME,
(SELECT DEPARTMENT_NAME FROM DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID) DEPARTMENT_NAME,
(SELECT FIRST_NAME || ' ' || LAST_NAME
 FROM EMPLOYEES E1
 WHERE E.MANAGER_ID= E1.EMPLOYEE_ID) MANAGER_NAME
FROM EMPLOYEES E





SELECT
(e.first_name || ' ' || e.last_name) AS employee_name,
d.department_name,
(m.first_name || ' ' || m.last_name) AS manager_name
FROM employees e
JOIN departments d USING (department_id)
LEFT JOIN employees m ON (e.manager_id = m.employee_id);




SELECT *
FROM EMPLOYEES E
WHERE E.MANAGER_ID=(

SELECT EMPLOYEE_ID
FROM EMPLOYEES
WHERE MANAGER_ID IS NULL)




SELECT
(e.first_name || ' ' || e.last_name) AS full_name,
d.department_name,
e.salary,
e.hire_date
FROM employees e
JOIN departments d ON  d.department_id=e.DEPARTMENT_ID
WHERE e.manager_id = (
SELECT employee_id
FROM employees
WHERE manager_id IS NULL
);






SELECT
(e.first_name || ' ' || e.last_name) AS full_name,
e.salary,
m.avg_salary
FROM employees e
JOIN (
SELECT manager_id, AVG(salary) AS avg_salary
FROM employees
GROUP BY manager_id
) m USING (manager_id)
WHERE e.salary <= m.avg_salary;







SELECT
1+COUNT(t2.expenditure) AS rank,
t1.department_id,
t1.expenditure
FROM (
SELECT
department_id,
SUM(salary) AS expenditure
FROM employees
GROUP BY department_id
) t1
LEFT JOIN (
SELECT
department_id,
SUM(salary) AS expenditure
FROM employees
GROUP BY department_id
) t2 ON (t1.expenditure > t2.expenditure)
GROUP BY t1.department_id, t1.expenditure
ORDER BY rank;


SELECT
1+COUNT(*) AS rank,
t1.department_id,
t1.expenditure
FROM (
SELECT
department_id,
SUM(salary) AS expenditure
FROM employees
GROUP BY department_id
) t1
LEFT JOIN (
SELECT
department_id,
SUM(salary) AS expenditure
FROM employees
GROUP BY department_id
) t2 ON (t1.expenditure > t2.expenditure)
GROUP BY t1.department_id, t1.expenditure
ORDER BY rank





SELECT E1.LAST_NAME, COUNT(*) AS "TOTAL MANAGED EMPLOYEES"
 FROM EMPLOYEES E1 JOIN EMPLOYEES E2
 ON (E1.MANAGER_ID = E2.EMPLOYEE_ID)
GROUP BY E1.MANAGER_ID, E1.LAST_NAME
ORDER BY "TOTAL MANAGED EMPLOYEES" ASC;




SELECT E1.LAST_NAME, COUNT(*) AS "TOTAL MANAGED EMPLOYEES"
FROM EMPLOYEES E1 JOIN EMPLOYEES E2
ON E1.EMPLOYEE_ID= E2.MANAGER_ID
GROUP BY E1.EMPLOYEE_ID, E1.LAST_NAME
ORDER BY "TOTAL MANAGED EMPLOYEES" ASC;


































